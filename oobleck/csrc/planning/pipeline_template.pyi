from typing import List, Tuple

class StageExecutionResult:
    def get_layer_indices(self) -> List[int]: ...
    def get_num_gpus(self) -> int: ...
    def get_memory_consumption(self) -> int: ...

class PipelineTemplate:
    def get_iteration_time(self) -> float: ...
    def get_stages(self) -> List[StageExecutionResult]: ...
    def get_num_nodes(self) -> int: ...
    def get_num_gpus_per_node(self) -> int: ...

class PipelineTemplateGenerator:
    def __init__(self): ...
    def create_pipeline_templates(
        self,
        model_name: str,
        model_tag: str,
        microbatch_size: int,
        num_nodes: Tuple[int, int],
        num_gpus_per_node: int,
    ) -> List[PipelineTemplate]: ...
